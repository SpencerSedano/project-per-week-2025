<div class="card text-center m-4" style="width: 18rem;">
    <div class="card-body p-0">
        <h5 class="card-title @InitialColor text-white p-4">@FormattedTime</h5>
        <p class="card-text">@TimerName</p>
        <p>Hour</p>
        <input type="text" @bind="TimerHours"/>
        <p>Minute</p>
        <input type="text" @bind="TimerMinutes"/>
        <p>Second</p>
        <input type="text" @bind="TimerSeconds"/>
        <a @onclick="CreateTimer" class="btn btn-primary m-4">Start Time</a>
    </div>
</div>


@code {
    [Parameter]
    public string InitialColor { get; set; } = "bg-dark";

    [Parameter] 
    public string TimerName { get; set; } = "None";
    
    public System.Timers.Timer BestTimer = new();

    public int CountDownTime = 10;
    public int TimerMinutes;
    public int TimerHours;
    public int TimerSeconds;
    public string FormattedTime = "00:00:00";

    void SetUpTimer()
    {
        CountDownTime = TimerHours * 3600 + TimerMinutes * 60 + TimerSeconds;
        if (CountDownTime <= 0)
        {
            FormattedTime = "00:00:00";
            Console.WriteLine("Invalid time. Please set a valid countdown time.");
            return;
        }

        BestTimer.Interval = 1000;
        BestTimer.Elapsed += UpdateTimer;
        BestTimer.Start();
    }

    void UpdateTimer(object? source, System.Timers.ElapsedEventArgs e)
    {
        if (CountDownTime > 0)
        {
            CountDownTime--;
            FormattedTime = TimeSpan.FromSeconds(CountDownTime).ToString(@"hh\:mm\:ss");
            Console.WriteLine($"Countdown is: {FormattedTime}");
        }
        else
        {
            Console.WriteLine("Finished");
            BestTimer.Stop();
            BestTimer.Dispose();
            FormattedTime = "00:00:00";
        }

        InvokeAsync(StateHasChanged);
    }

    void CreateTimer()
    {
        BestTimer.Stop();
        SetUpTimer();
        Console.WriteLine("Timer has started");
    }

}
